angl_sh    = abs(link_plane( rOelb, rO, rO, rA ));
angl_elb   = abs(link_plane( rOelb, rH_1, rA, rO ));

Fmg_p_el = m * g;                % [N] - payload
Fmg_w_el = m_el * g;             % [N] - weigth of the elbow
Fmg_w_sh = (m_sh + 2*m_act) * g; % [N] - weigth of the shoulder with 2 actuators

L_p_el = l_el * cos (angl_elb) + l_sh * cos (angl_sh);       % [m] - payload is applied
L_w_el = 1/2 * l_el * cos (angl_elb) + l_sh * cos (angl_sh); % [m] - COM of the elbow
L_w_sh = 1/2 * l_sh * cos (angl_sh);                      % [m] - COM of the shoulder

Tau    = Fmg_p_el*L_p_el + Fmg_w_el*L_w_el + Fmg_w_sh*L_w_sh;  % [N*m] 

F  = (B2B3*Tau*(B2B3*sin(Alpha_3)^2*sin(Beta)*cos(Theta_1)*cos(Theta_2) + B2B3*cos(Alpha_3)^2*sin(Beta)*sin(Theta_1)*sin(Theta_2)...
    - B1B2*cos(Alpha_2)*cos(Alpha_3)*sin(Beta)*sin(Theta_1)*sin(Theta_2) - B1B2*cos(Alpha_2)*sin(Alpha_3)*sin(Beta)*cos(Theta_2)*sin(Theta_1)...
    - B1B2*cos(Alpha_3)*cos(Beta)*sin(Alpha_2)*sin(Theta_1)*sin(Theta_2) - B1B2*cos(Beta)*sin(Alpha_2)*sin(Alpha_3)*cos(Theta_2)*sin(Theta_1)...
    - B3B1*cos(Alpha_1)*cos(Alpha_3)*sin(Beta)*sin(Theta_1)*sin(Theta_2) - B3B1*cos(Alpha_1)*sin(Alpha_3)*sin(Beta)*cos(Theta_1)*sin(Theta_2)...
    + B3B1*cos(Alpha_3)*cos(Beta)*sin(Alpha_1)*sin(Theta_1)*sin(Theta_2) + B3B1*cos(Beta)*sin(Alpha_1)*sin(Alpha_3)*cos(Theta_1)*sin(Theta_2)...
    + B2B3*cos(Alpha_3)*sin(Alpha_3)*sin(Beta)*cos(Theta_1)*sin(Theta_2) + B2B3*cos(Alpha_3)*sin(Alpha_3)*sin(Beta)*cos(Theta_2)*sin(Theta_1)))...
    /(2*cos(Theta_1)*cos(Theta_2)*sin(Beta - Theta_F)*(B1B2*B2B3*C1O*cos(Lamda_3)*sin(Alpha_2)*sin(Alpha_3)...
    - B3B1*B2B3*C2O*cos(Lamda_1)*sin(Alpha_1)*sin(Alpha_3) - B1B2*B2B3*C1O*sin(Alpha_2)*sin(Alpha_3)*sin(Lamda_3)*tan(Theta_1)...
    - B3B1*B2B3*C2O*sin(Alpha_1)*sin(Alpha_3)*sin(Lamda_1)*tan(Theta_2)...
    + (B1B2*B3B1*C2O*cos(Alpha_1)*cos(Lamda_1)*sin(Alpha_2)*sin(Theta_1))...
    /cos(Theta_1) + (B1B2*B3B1*C2O*cos(Alpha_2)*cos(Lamda_1)*sin(Alpha_1)*sin(Theta_1))...
    /cos(Theta_1) - (B1B2*B3B1*C1O*cos(Alpha_1)*cos(Lamda_3)*sin(Alpha_2)*sin(Theta_2))...
    /cos(Theta_2) - (B1B2*B3B1*C1O*cos(Alpha_2)*cos(Lamda_3)*sin(Alpha_1)*sin(Theta_2))...
    /cos(Theta_2) + (B1B2*B2B3*C1O*cos(Alpha_3)*cos(Lamda_3)*sin(Alpha_2)*sin(Theta_2))...
    /cos(Theta_2) - (B3B1*B2B3*C2O*cos(Alpha_3)*cos(Lamda_1)*sin(Alpha_1)*sin(Theta_1))...
    /cos(Theta_1) + B1B2*B3B1*C2O*cos(Alpha_1)*sin(Alpha_2)*sin(Lamda_1)*tan(Theta_1)*tan(Theta_2)...
    + B1B2*B3B1*C2O*cos(Alpha_2)*sin(Alpha_1)*sin(Lamda_1)*tan(Theta_1)*tan(Theta_2)...
    + B1B2*B3B1*C1O*cos(Alpha_1)*sin(Alpha_2)*sin(Lamda_3)*tan(Theta_1)*tan(Theta_2)...
    + B1B2*B3B1*C1O*cos(Alpha_2)*sin(Alpha_1)*sin(Lamda_3)*tan(Theta_1)*tan(Theta_2)...
    - B1B2*B2B3*C1O*cos(Alpha_3)*sin(Alpha_2)*sin(Lamda_3)*tan(Theta_1)*tan(Theta_2)...
    - B3B1*B2B3*C2O*cos(Alpha_3)*sin(Alpha_1)*sin(Lamda_1)*tan(Theta_1)*tan(Theta_2)));

